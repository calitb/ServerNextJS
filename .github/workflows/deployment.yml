name: Deployment

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: America/Panama

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Run Linter
        run: yarn lint

      - name: Contentful Migration
        run: ./contentful/environment/setup.sh
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_TARGET_ENVIRONMENT: 'e2e'
          MANAGEMENT_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_MANAGEMENT_ACCESS_TOKEN }}

      - name: Run Unit Tests
        run: yarn test:ci

      - name: Build for e2e and Start
        run: NODE_ENV=e2e yarn build:start & yarn wait-fe
        env:
          CI: true
          API_GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.API_GITHUB_PERSONAL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: 'e2e'
          NOTION_SPACE_ID: ${{ secrets.NOTION_SPACE_ID }}
          NOTION_WIKI_PAGE_ID: ${{ secrets.NOTION_WIKI_PAGE_ID }}

      - name: Run e2e
        run: yarn cy:run
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: 'e2e'

      - name: Create Coverage Report
        run: |
          yarn merge:reports
          yarn test:coverage:report

      - name: Analyze TestCoverage
        if: github.ref == 'refs/heads/main'
        id: test_coverage
        run: |
          coverage=`sed -n 47p coverage/lcov-report/index.html | awk -F '>' '{print $2}' | awk -F '%' '{print $1}'`
          echo "::set-output name=COVERAGE::$coverage"
          if (( $(echo "$coverage <= 50" | bc -l) )) ; then
            echo "::set-output name=COLOR::red"
          elif (( $(echo "$coverage > 80" | bc -l) )); then
            echo "::set-output name=COLOR::success"
          else
            echo "::set-output name=COLOR::orange"
          fi

      - name: Generate TestCoverage Badge
        if: github.ref == 'refs/heads/main'
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: calitbdev-test-coverage.json
          label: TestCoverage
          message: '${{steps.test_coverage.outputs.COVERAGE}}%'
          color: '${{steps.test_coverage.outputs.COLOR}}'
          cacheSeconds: 300

      - name: Build for Production
        if: github.ref == 'refs/heads/main'
        run: yarn build
        env:
          API_GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.API_GITHUB_PERSONAL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: 'master'
          NOTION_SPACE_ID: ${{ secrets.NOTION_SPACE_ID }}
          NOTION_WIKI_PAGE_ID: ${{ secrets.NOTION_WIKI_PAGE_ID }}

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Packages Docker Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Cache Docker
        if: github.ref == 'refs/heads/main'
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: my-docker-cache-{hash}
          restore-keys: |
            my-docker-cache-

      - name: Docker build/push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/${{ github.repository_owner }}/site:latest
          platforms: linux/amd64,linux/arm/v7
          push: true

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Deploy docker image
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd APP
            ./update_fe.sh
          host: calitb.dev
          user: pi
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          args: '-tt'
